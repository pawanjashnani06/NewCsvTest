swagger: '2.0'
info:
  title: NedbankID
  description: Provides a RESTful Interface proxy for the NedbankID v6 Service.
  version: 1.0.4
  x-ibm-name: nedbankid
host: localhost:10010
basePath: /nedbankid/v1
schemes:
  - https
security:
  - API Key: []
consumes:
  - application/json
produces:
  - application/json
x-ibm-configuration:
  enforced: true
  phase: realized
  testable: true
  externalDocs: []
  attachments: []
tags: []
definitions:
  UserDetails:
    type: object
    properties:
      UniqueUserID:
        type: integer
        format: int64
        description: The user's unique idntification number.
      Username:
        type: string
        description: The user's username
      IdDetails:
        $ref: '#/definitions/IdentificationDetails'
      FirstName:
        type: string
        description: First Name'
      Surname:
        type: string
        description: Last name'
      MobileNumber:
        type: string
        description: Mobile Number
      EmailAddress:
        type: string
        description: Email Address
      Title:
        type: string
        description: Title
      Gender:
        type: string
        description: Gender
      DateOfBirth:
        type: string
        description: Date of Birth
  SupportedPartners:
    type: array
    items:
      type: object
      properties:
        PartnerID:
          type: integer
          format: int64
        PartnerName:
          type: string
        PartnerURL:
          type: string
        ChannelID:
          type: integer
          format: int64
        MatchBaseURL:
          type: string
        CustomToken:
          type: string
        FederationID:
          type: string
  ProfileCredentials:
    type: object
    properties:
      Profile:
        type: string
        description: Profile number of the user
      PIN:
        type: string
        description: Encrypted Pin of the user
      Password:
        type: string
        description: Encrypted Password of the user
  ProfileAliasDetails:
    type: object
    properties:
      Action:
        type: string
        enum:
          - Link
          - Delink
      ProfileInfo:
        $ref: '#/definitions/ProfileCredentials'
      ApproveItInfo:
        $ref: '#/definitions/ApproveITInfo'
  UpdateDetails:
    type: object
    properties:
      action:
        type: string
        enum:
          - ChangePassword
          - ChangeUsername
          - UserUpdate
      NewPassword:
        type: string
        description: 'Used for ''ChangePassword'' in conjunction with ''action=Change Password'', and for ''ResetPassword'' in conjunction with ''action=Reset Password'''
      OldPassword:
        type: string
        description: Used in ChangePassword in conjunction with action=Change Password
      NewUsername:
        type: string
        description: Used in 'ChangeUsername' in conjunction with 'action=Change Username'
      Username:
        type: string
        description: Used in 'ResetPassword' in conjunction with 'action=Reset Password'
      GeneralUpdateDetails:
        $ref: '#/definitions/UserGeneralInfo'
  ApproveITInfo:
    description: Used in PUT /users for action='ApproveTemporaryUser' and for action='ResetPassword'
    type: object
    properties:
      ApproveITMethod:
        type: string
      ApproveITVerificationID:
        type: integer
        format: int64
      OTP:
        type: integer
        format: int64
  UserGeneralInfo:
    type: object
    properties:
      FirstName:
        type: string
      Surname:
        type: string
      MobileNumber:
        type: string
      EmailAddress:
        type: string
      Title:
        type: string
      Gender:
        type: string
      EnterpriseCustomerNumber:
        type: integer
        format: int64
      Password:
        type: string
      Username:
        type: string
  EnterpriseUserDetails:
    type: object
    properties:
      ProfileNumber:
        type: string
        format: int64
        description: The user's unique customer number in Nedbank's customer information system. Maps to 'RetrieveUserDetailsRs.SecurityDetails.EnterpriseCustomerNumber'
      IdentificationDetails:
        $ref: '#/definitions/IdentificationDetails'
  IdentificationDetails:
    type: object
    properties:
      IdNumber:
        type: string
        description: The identification number corresponding to the identification type. Must be used in conjunction with IDType. Maps to 'RetrieveUserDetailsRs.SecurityDetails.IdentificationDetail.IdentificationNumber'
      IdType:
        type: string
        description: 'The type of the user''s identification, e.g. SA ID Passport, etc. Must be used in conjunction with IDNumber. Maps to ''RetrieveUserDetailsRs.SecurityDetails.IdentificationDetail.IdentificationType'''
      CountryCode:
        type: string
        description: Used in conjunction with IDType and IDNumber in the case where the identification type is passport to indicate the country of issue for the passport. Maps to 'RetrieveUserDetailsRs.SecurityDetails.IdentificationDetail.CountryCode'
  AddUserDetails:
    type: object
    properties:
      GeneralInfo:
        $ref: '#/definitions/UserGeneralInfo'
      IdDetails:
        $ref: '#/definitions/IdentificationDetails'
      TermsAndConditionsAccepted:
        type: boolean
  RecoverUserDetails:
    type: object
    properties:
      MobileNumber:
        type: string
      IdDetails:
        $ref: '#/definitions/IdentificationDetails'
  RecoverPasswordDetails:
    type: object
    properties:
      MobileNumber:
        type: string
      Username:
        type: string
      ApproveItInfo:
        $ref: '#/definitions/ApproveITInfo'
  ApproveUserDetails:
    type: object
    properties:
      TemporaryID:
        type: integer
        format: int64
      ApproveITInfo:
        $ref: '#/definitions/ApproveITInfo'
  TemporaryUserDetails:
    type: object
    properties:
      TemporaryID:
        type: integer
        format: int64
      GeneralInfo:
        $ref: '#/definitions/UserGeneralInfo'
      IdDetails:
        $ref: '#/definitions/IdentificationDetails'
      TermsAndConditionsAccepted:
        type: boolean
  NewUserDetails:
    type: object
    properties:
      TemporaryID:
        type: integer
        format: int64
      SecurityInfo:
        $ref: '#/definitions/SecurityInformation'
  SecurityInformation:
    type: object
    properties:
      SecurityRequestID:
        type: string
      MobileNumber:
        type: string
  CheckUsername:
    type: object
    properties:
      username:
        type: string
  RolesList:
    type: array
    items:
      type: object
      properties:
        RoleName:
          type: string
        RoleNamespace:
          type: string
  ResponseDescription:
    type: object
    properties:
      code:
        type: string
      desription:
        type: string
      InvalidFieldsList:
        type: array
        items:
          type: object
          properties:
            invalidFieldField:
              type: string
            invalidFieldMessageField:
              type: string
  ErrorDescription:
    type: object
    properties:
      data:
        type: array
      metadata:
        $ref: '#/definitions/ResponseDescription'
  TemporaryUserInfo:
    type: object
    properties:
      TemporaryID:
        type: integer
        format: int64
      MobileNumber:
        type: string
securityDefinitions:
  API Key:
    type: apiKey
    name: X-IBM-Client-Id
    in: header
    description: ''
paths:
  /users/usernames:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/CheckUsername'
          description: The new user's information
          name: CheckUsername
          required: true
          in: body
        - name: Authorization
          type: string
          required: true
          in: header
      responses:
        '200':
          description: Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00
          schema:
            type: object
            properties:
              data:
                $ref: ''
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: CheckUsernameAvailability
      summary: Check if the username is available
  '/users/securitystatus/{securityrequestid}':
    get:
      description: ''
      tags:
        - Anonymous
        - Secure User
      parameters:
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
        - description: A unique identifier that identifies the partner
          name: securityrequestid
          format: int64
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: 'Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00 which means user accepted ussd. R10 means request is still pending, R14 means fall back to OTP method, R15 means user rejected USSD ApproveIT, R17 means device unabailable/unreachable '
          schema:
            type: object
            properties:
              data:
                $ref: ''
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: CheckSecurityApprovalStatus
      summary: Checks the status of the aproveIT verificationID
  /users:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/AddUserDetails'
          description: The new user's information
          name: NewUser
          required: true
          in: body
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: 'Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00, after which you must call users/securitystatus/{securityrequestid} to poll for Approve-it status'
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/NewUserDetails'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: AddUser
      summary: Add a New User
    get:
      description: ''
      tags:
        - Secure User
      parameters:
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: Request has been successfully executed and the user's details are returned. The RetrieveUserDetailsRs.ResultSet.ResultCode must be R00
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/UserDetails'
              metadata:
                $ref: '#/definitions/ResponseDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RetrieveUsersDetails
      summary: Retrieves logged in user's details
    put:
      description: ''
      tags:
        - Secure User
      parameters:
        - schema:
            $ref: '#/definitions/UpdateDetails'
          description: For descriptions on the parameters see the '/definitions/UpdateDetails' object
          name: UpdateDetails
          required: true
          in: body
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: Request has been successfully executed and the metadata.code must be R00.
          schema:
            type: object
            properties:
              data:
                $ref: ''
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: UpdateUser
      summary: 'Used for ''ChangePassword'', ''ChangeUsername'', ''UpdateUser'''
  /users/alias/profile:
    post:
      operationId: MaintainAliasProfile
      summary: Used for link/de-link user profile alias
      parameters:
        - name: ProfileAliasDetails
          in: body
          schema:
            $ref: '#/definitions/ProfileAliasDetails'
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      tags:
        - Secure User
      responses:
        '200':
          description: Request has been successfully executed and the alias has been updated. The metadata.code must be R00.
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SecurityInformation'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
  /users/approvals:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/ApproveUserDetails'
          name: ApproveUser
          in: body
          description: ''
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: 'Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00. R10 code means request is still pending '
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SecurityInformation'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: ApproveTempUser
      summary: Approves temporary user created with POST on /users
  /users/roles:
    get:
      description: ''
      tags:
        - Secure User
        - Partner Only
      parameters:
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
        - name: RoleName
          required: true
          type: string
          in: query
          description: ''
        - name: RoleNamespace
          required: false
          type: string
          in: query
          description: ''
      responses:
        '200':
          description: Request has been successfully executed and a list of a Person's details according to the specific business context is returned
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/RolesList'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RetrieveUserRoles
      summary: Get the Roles for a User
  /users/recoveries/password:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/RecoverPasswordDetails'
          name: RecoverUser
          in: body
          description: ''
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: 'Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00. R10 means request is still pending '
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SecurityInformation'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RecoverPassword
      summary: Reset forgotten password
  /users/recoveries/username:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/RecoverUserDetails'
          name: RecoverUser
          in: body
          description: ''
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: 'Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00. R10 code means request is still pending '
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SecurityInformation'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RecoverUsername
      summary: Recover forgotten username
  '/partners/{partnerid}':
    get:
      description: Retrieve partner details
      tags:
        - Partner Only
        - Anonymous
      parameters:
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
        - description: A unique identifier that identifies the partner
          name: partnerid
          format: int64
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SupportedPartners'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RetrievePartner
      summary: Retrieve supported Partner
  /partners:
    get:
      description: ''
      tags:
        - Anonymous
      parameters:
        - description: ''
          name: Authorization
          type: string
          required: true
          in: header
      responses:
        '200':
          description: Request has been successfully executed and the information notice has been accepted. The metadata.code must be R00
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/SupportedPartners'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RetrievePartners
      summary: Retrieve supported Partners
  /users/enterprise:
    post:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/EnterpriseUserDetails'
          name: EnterpriseUserDetails
          required: true
          in: body
          description: ''
        - description: ''
          name: Authorization
          required: false
          type: string
          in: header
      responses:
        '200':
          description: Request has been successfully executed and the user's CIS number is returned. R00 is metadata.code
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  EnterpriseCustomerNumber:
                    type: integer
                    format: int64
              metadata:
                $ref: '#/definitions/ResponseDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: CheckEnterpriseUserExists
      summary: Tests if user is known already by enterprise values such as RSA IDPassport
  '/partners/partnerauthn/{partnerid}':
    get:
      description: ''
      tags:
        - Partner Only
        - Anonymous
      parameters:
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
        - description: A unique identifier that identifies the partner
          name: partnerid
          format: int64
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: Request has been successfully executed and authn request is created. The metadata.code must be R00
          schema:
            type: object
            properties:
              data:
                $ref: ''
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: RetrievePartnerAuthN
      summary: Retrieve supported Partner Authn Request
  /users/verify/profile:
    post:
      operationId: VerifyProfile
      summary: 'Authenticates the profile, pin and password and checks if NedbankID exists. If not a temporary ID is created with profile client details and returned.'
      parameters:
        - name: ProfileAliasDetails
          in: body
          schema:
            $ref: '#/definitions/ProfileCredentials'
      tags:
        - Anonymous
      responses:
        '200':
          description: Request has been successfully executed and profile authenticated. The metadata.code must be R00
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/TemporaryUserInfo'
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
  /users/temporary:
    put:
      description: ''
      tags:
        - Anonymous
      parameters:
        - schema:
            $ref: '#/definitions/TemporaryUserDetails'
          description: For descriptions on the parameters see the '/definitions/TemporaryUserDetails' object
          name: TemporaryUserDetails
          required: true
          in: body
      responses:
        '200':
          description: 'Request has been successfully executed, the metadata.code must be R00.'
          schema:
            type: object
            properties:
              data:
                $ref: ''
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: UpdateTemporaryUser
      summary: 'Used for update username, password and T&Cs on temporary user'
  /users/renew/token:
    get:
      operationId: RenewToken
      summary: 'Checks if token in header is valid and issues a new JWT token. Note: the token will be issued for X number of times and the lifetime of token will decrease as each renewal is done. Consumer must check token claim for number of times that they can request a renewal.'
      parameters:
        - description: Json web token
          name: Authorization
          required: true
          type: string
          in: header
      tags:
        - Secure User
      responses:
        '200':
          description: Request has been successfully executed and the alias has been updated. The metadata.code must be R00.
          schema:
            type: object
            properties:
              data:
                type: string
              metadata:
                $ref: '#/definitions/ErrorDescription'
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
x-ibm-endpoints:
  - endpointUrl: 'https://api-e.nedsecure.co.za/nedbankext'
    description: Base Gateway API Endpoint
    type:
